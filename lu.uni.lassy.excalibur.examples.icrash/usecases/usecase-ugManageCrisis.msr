package icrash.usecases.ugManageCrisis {

	import icrash.environment
	import icrash.usecases.subfunctions

	Use Case Model {
		
		use case system usergoal ugManageCrisis() {
			actor actCoordinator[primary, active]

			reuse oeValidateAlert[0..*]
			reuse oeSetCrisisStatus[0..*]
			reuse oeSetCrisisHandler[0..*]
			reuse oeReportOnCrisis[0..*]
			reuse oeAddFamilyMemberOnCrisis[0..*]
			reuse oeDeleteFamilyMemberOnCrisis[0..*]
			reuse oeCloseCrisis[0..*]
			reuse oeInvalidateAlert[0..*]

			step a: actCoordinator executes oeValidateAlert
			step b: actCoordinator executes oeSetCrisisStatus
			step c: actCoordinator executes oeSetCrisisHandler
			step d: actCoordinator executes oeReportOnCrisis
			step e: actCoordinator executes oeAddFamilyMemberOnCrisis
			step f: actCoordinator executes oeDeleteFamilyMemberOnCrisis
			step g: actCoordinator executes oeCloseCrisis
			step h: actCoordinator executes oeInvalidateAlert
			
			ordering constraint "managing a crisis is doing one of the indicated use cases."

		}

	}
}